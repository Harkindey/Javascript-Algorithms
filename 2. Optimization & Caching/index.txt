const isUnique = (arr) => {
  let result = true;
  for (let i = 0; i < arr.length; i++) {
    console.log(`~~~~ OUTER LOOP ~~~~ i === ${i}`);
    for (let j = 0; j < arr.length; j++) {
      console.log(`~~~~ INNER LOOP ~~~~ j === ${j}`);
      if (i !== j && arr[i] === arr[j]) {
        result = false;
      }
    }
  }
  return result;
};
console.log(isUnique([1,2,3]) === true);
// console.log(isUnique([1,1,3]) === false);

---> The Time complexity in the about is n^2. We can do better.

isUnique = (arr) => {
  const breadcrumbs = {};
  let result = true;
  for (let i = 0; i < arr.length; i++) {
    console.log(`~~~~ LOOP ~~~~ i === ${i}`);
    if (breadcrumbs[arr[i]]) { //check if in object
      result = false; ---> Not Unique
    } else {
      breadcrumbs[arr[i]] = true; //save in object
    }
  }  
  return result;
};
console.log(isUnique([1,2,3]) === true);
// console.log(isUnique([1,1,3]) === false);

---> This method is the breadcrumbs method it involves just looping thru 
the array once and storing checking values in a object mor like caching. 
